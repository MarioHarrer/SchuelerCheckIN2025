@model SchuelerCheckIN2025.Models.AnwesenheitsViewModel

@{
    ViewData["Title"] = "Abwesende Schüler";
}

<h1>@ViewData["Title"]</h1>

<form method="post" asp-action="Anwesenheit">
    <div class="form-group">
        <label for="selectedClass">Klasse auswählen:</label>
        <select asp-for="SelectedClass" asp-items="Model.ClassList" class="form-control" id="selectedClass">
            <option value="">-- Bitte wählen --</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary mt-2">Anzeigen</button>
</form>

@if (string.IsNullOrEmpty(Model.SelectedClass))
{
    <h4 class=" mt-4">Bitte wählen Sie eine Klasse aus, um die abwesenden Schüler anzuzeigen.</h4>
}
else
{
    var filteredStudents = Model.Students?.Where(s => s.klasse.Equals(Model.SelectedClass)).ToList();

    if (filteredStudents != null && filteredStudents.Any())
    {
        <h4 class="mt-4">Abwesende Schüler der Klasse @Model.SelectedClass</h4>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Vor- und Nachname</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in filteredStudents)
                {
                    var emailParts = student.email?.Split('@')?[0]?.Split('.');
                    var firstName = emailParts?.Length > 0 ? char.ToUpper(emailParts[0][0]) + emailParts[0].Substring(1) : "Unbekannt";
                    var lastName = emailParts?.Length > 1 ? char.ToUpper(emailParts[1][0]) + emailParts[1].Substring(1) : "";

                    <tr>
                        <td>@firstName @lastName</td>
                        <td>Abwesend</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <h4 class="mt-4">Aktuell abwesenden Schüler in der Klasse @Model.SelectedClass!</h4>
    }
}
